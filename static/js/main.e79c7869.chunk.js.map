{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","useState","sortBy","setSortBy","isReverse","setIsReverse","goods","prepareGoods","sort","goodA","goodB","Alphabet","localeCompare","Length","length","reverse","getPrepareGoods","GoodItems","map","good","handleSort","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,iBAAAA,M,KAYL,IAuBaE,EAAgB,WAC3B,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA3BsB,SAACA,EAAD,GAAmC,IAAzBJ,EAAwB,EAAxBA,OAAQE,EAAgB,EAAhBA,UACxCG,EAAY,YAAOD,GAmBzB,OAjBIJ,GACFK,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKJ,EAAOa,SACV,OAAOF,EAAMG,cAAcF,GAC7B,KAAKZ,EAAOe,OACV,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXV,GACFG,EAAaQ,UAGRR,EAOOS,CAAgBjB,EAAiB,CAAEG,SAAQE,cAEnDa,EAAY,kBAChB,6BACGX,EAAMY,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SAKTC,EAAa,SAACZ,GAAD,OAAkB,kBAAML,EAAUK,KAQrD,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASF,EAAWtB,EAAOa,UAC3BY,KAAK,SACLF,UACEG,IAAG,iBAAkB,CAAE,WAAuB,aAAXtB,IAJvC,iCAUA,wBACEoB,QAASF,EAAWtB,EAAOe,QAC3BU,KAAK,SACLF,UACEG,IAAG,oBAAqB,CAAE,WAAuB,WAAXtB,IAJ1C,4BAUA,wBACEoB,QA/Bc,kBAAMjB,GAAcD,IAgClCmB,KAAK,SACLF,UACEG,IAAG,oBAAqB,CAAE,YAAapB,IAJ3C,sBAUEA,GAAaF,IAEX,wBACEoB,QAzCE,WACZnB,EAAU,IACVE,GAAa,IAwCHkB,KAAK,SACLF,UAAU,4BAHZ,sBAUN,6BACE,cAACJ,EAAD,UCtHRQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e79c7869.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, {useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  Alphabet = 'alphabet',\n  Length = 'length',\n}\n\ntype StateVar = {\n  sortBy: string,\n  isReverse: boolean,\n};\n\ntype Func = (goods: string[], { sortBy, isReverse }: StateVar) => string[];\n\nconst getPrepareGoods: Func = (goods, { sortBy, isReverse }) => {\n  const prepareGoods = [...goods];\n\n  if (sortBy) {\n    prepareGoods.sort((goodA, goodB) => {\n      switch (sortBy) {\n        case SortBy.Alphabet:\n          return goodA.localeCompare(goodB);\n        case SortBy.Length:\n          return goodA.length - goodB.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const goods = getPrepareGoods(goodsFromServer, { sortBy, isReverse });\n\n  const GoodItems = () => (\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">{good}</li>\n      ))}\n    </ul>\n  );\n\n  const handleSort = (sort: string) => () => setSortBy(sort);\n  const handleReverse = () => setIsReverse(!isReverse);\n\n  const reset = () => {\n    setSortBy('');\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={handleSort(SortBy.Alphabet)}\n          type=\"button\"\n          className={\n            cn('button is-info', { 'is-light': sortBy !== 'alphabet' })\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={handleSort(SortBy.Length)}\n          type=\"button\"\n          className={\n            cn('button is-success', { 'is-light': sortBy !== 'length' })\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={handleReverse}\n          type=\"button\"\n          className={\n            cn('button is-warning', { 'is-light': !isReverse })\n          }\n        >\n          Reverse\n        </button>\n\n        {(isReverse || sortBy)\n          && (\n            <button\n              onClick={reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <GoodItems />\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}